generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model images {
  id        String   @id @default(cuid())
  messageId String
  url       String
  fileName  String
  fileSize  Int
  createdAt DateTime @default(now())
  messages  messages @relation(fields: [messageId], references: [id], onDelete: Cascade)

  @@index([messageId])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  id        String   @id @default(cuid())
  sermonId  String
  content   String
  order     Int
  createdAt DateTime @default(now())
  images    images[]
  sermons   sermons  @relation(fields: [sermonId], references: [id], onDelete: Cascade)

  @@index([sermonId, order])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sermons {
  id        String     @id @default(cuid())
  title     String
  pastor    String
  date      DateTime   @default(now())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  messages  messages[]
}

// Tablas de la Biblia
model books {
  booknum   Int     @id
  bookname  String
  testament String?
  category  String?
  words     words[]
}

model words {
  wordid   Int     @id
  word     String?
  booknum  Int?
  chnum    Int?
  versenum Int?
  books    books?  @relation(fields: [booknum], references: [booknum], onDelete: NoAction, onUpdate: NoAction)
}

model bible_verses {
  id           Int     @id @default(autoincrement()) @db.SmallInt
  tema         String?
  libro        String?
  capitulo     BigInt?
  versiculo    String?
  codigo_libro String?
}

model favorites_verses {
  id          BigInt    @id @default(autoincrement())
  user_id     BigInt
  booknum     Int
  chapter     Int
  start_verse Int
  end_verse   Int
  text        String
  created_at  DateTime? @default(now()) @db.Timestamp(6)
}
